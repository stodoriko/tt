package com.git;

public class Reset {
//    ! Опасная команда! Может быть использована для переписывания истории
//    Предназначена для отмены каких-либо изменений в проекте, откату проекта к какому-то снимку

//    HEAD - указывает на текущее состояние нашего проекта
//    git reset HEAD^ - смещаем текущее состояние нашего проекта на один коммит назад
//    git reset HEAD^^ - 2 коммита; ^^^ - 3 и т.д.
//    или git reset HEAD~1, HEAD~2, HEAD~3 и т.д.

//    git reset имеет 3 режима (в зависимости от радикальности отката к указанному коммиту)
//      --soft
//      --mixed (по-умолчанию)
//      --hard (удаляются изменения и перезаписывается история)
//    git reset [--soft |--mixed |--hard] [commit] (Желаемый коммит. Может быть хэш коммита или различные вариации с HEAD)
//    -----------------------------------------------
//    git reset --hard HEAD^^
//    Возвращает проект к указанному коммиту, при этом полность удаляет БЕЗВОЗВРАТНО все коммиты после указанного.
//    git reset --hard = git reset --hard HEAD
//    Удалит все отслеживаемые и неотслеживаемые изменения и возвращаемся к последнему коммиту в ветке
//    -----------------------------------------------
//    git reset --mixed HEAD^^ = git reset HEAD^^
//    Возвращает проект к указанному коммиту, при этом переводит все коммиты после указанного в неотслеживаемую зону(unstaged)
//    !Изменения не удаляются(unstaged), удаляются только коммиты.
//    -----------------------------------------------
//    git reset --soft HEAD^^
//    Возвращает проект к указанному коммиту, при этом переводит все коммиты после указанного в отслеживаемую зону(staged)
//    !Изменения не удаляются(staged), удаляются только коммиты.
//    -----------------------------------------------
//    При вызове без указания желаемого коммита по-умолчанию используется HEAD (git reset = git reset --mixed HEAD)

}
